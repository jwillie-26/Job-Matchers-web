declare namespace pMap {
	interface Options {
		/**
		Number of concurrently pending promises returned by `mapper`.

		@default Infinity
		*/
		concurrency?: number;
	}

	/**
	Function which is called for every item in `input`. Expected to return a `Promise` or value.

	@param input - Iterated element.
	@param index - Index of the element in the source array.
	*/
	type Mapper<Element = any, NewElement = any> = (
		input: Element,
		index: number
	) => NewElement | Promise<NewElement>;
}

declare const pMap: {
	/**
	Returns a `Promise` that is fulfilled when all promises in `input` and ones returned from `mapper` are fulfilled, or rejects if any of the promises reject. The fulfilled value is an `Array` of the fulfilled values returned from `mapper` in `input` order.

	@param input - Iterated over concurrently in the `mapper` function.
	@param 